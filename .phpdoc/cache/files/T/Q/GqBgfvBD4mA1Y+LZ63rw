1683346268
waR3U4bTeM%3A45bdf6a91a9e05bca142ca414efd9d9a-3a1f8e945bcd75b0c685d828e08fdc53
s:24584:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:42:"Gestion du suivie des paiements des frais.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:13:"PHP Version 7";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:8:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"category";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3:"PPE";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3:"GSB";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:13:"Réseau CERTA";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:23:"contact@reseaucerta.org";s:14:" * description";N;}i:3;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:9:"José GIL";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:15:"jgil@ac-nice.fr";s:14:" * description";N;}i:4;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:18:"2017 Réseau CERTA";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:13:"Réseau CERTA";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:6;O:49:"phpDocumentor\Reflection\DocBlock\Tags\InvalidTag":3:{s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag body";s:8:"GIT: <0>";s:60:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag throwable";N;}i:7;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:26:"http://www.reseaucerta.org";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:30:"Contexte « Laboratoire GSB »";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"3a1f8e945bcd75b0c685d828e08fdc53";s:39:" phpDocumentor\Reflection\Php\File name";s:25:"c_suivrePaiementFrais.php";s:39:" phpDocumentor\Reflection\Php\File path";s:37:"controleurs/c_suivrePaiementFrais.php";s:41:" phpDocumentor\Reflection\Php\File source";s:14073:"<?php

/**
 * Gestion du suivie des paiements des frais.
 *
 * PHP Version 7
 *
 * @category  PPE
 * @package   GSB
 * @author    Réseau CERTA <contact@reseaucerta.org>
 * @author    José GIL <jgil@ac-nice.fr>
 * @copyright 2017 Réseau CERTA
 * @license   Réseau CERTA
 * @version   GIT: <0>
 * @link      http://www.reseaucerta.org Contexte « Laboratoire GSB »
 */
$idComptable = $_SESSION['idComptable'];
$action = filter_input(INPUT_GET, 'action', FILTER_SANITIZE_STRING);

switch ($action) {
    case 'afficherFichesFrais':
        $lesVisiteurs = $pdo->getTableauVisiteur();
        array_unshift($lesVisiteurs, array(
            "nom" => "Tout",
            "prenom" => "Sélectionner",
            "id" => "null"
        ));
        $lesCles = array_keys($lesVisiteurs);
        $visiteurASelectionner = $lesCles[0];
        $lesEtats = $pdo->getTableauEtat();
        array_unshift($lesEtats, array(
            "libelle" => "Tout Sélectionner",
            "id" => "null"
        ));
        $lesClesEtat = array_keys($lesEtats);
        $etatASelectionner = $lesClesEtat[0];
        include 'vues/vuesComptables/v_filtreFicheFrais.php';
        foreach ($lesVisiteurs as $unVisiteur) {
            $idVisiteur = $unVisiteur['id'];
            $visiteur = $unVisiteur['nom'] . " " . $unVisiteur['prenom'];
            $lesMois = $pdo->getLesMoisDisponibles($idVisiteur);
            foreach ($lesMois as $unMois) {
                $mois = $unMois['mois'];
                $lesInfosFicheFrais = $pdo->getLesInfosFicheFraisPaiement($idVisiteur, $mois);
                if ($lesInfosFicheFrais) {
                    $numAnnee = $unMois['numAnnee'];
                    $numMois = $unMois['numMois'];
                    $libEtat = $lesInfosFicheFrais['libEtat'];
                    $idEtat = $lesInfosFicheFrais['idEtat'];
                    $btn = "btn btn-danger";
                    if ($idEtat == "VA") {
                        $changementEtat = "Mettre la fiche de frais en Paiement";
                    } elseif ($idEtat == "MP") {
                        $changementEtat = "Relancer le Paiement";
                    } else {
                        $changementEtat = "Remboursée";
                        $btn = "btn btn-success";
                    }
                    $montantValide = $lesInfosFicheFrais['montantValide'];
                    $dateModif = dateAnglaisVersFrancais($lesInfosFicheFrais['dateModif']);
                    include 'vues/vuesComptables/v_etatFraisComptable.php';
                }
            }
        }
        break;
    case 'choixFiltre':
        $idVisiteur = filter_input(INPUT_POST, 'lstVisiteurs', FILTER_SANITIZE_STRING);
        $idEtatCourant = filter_input(INPUT_POST, 'lstEtats', FILTER_SANITIZE_STRING);
        $cpt = 0;

        if ($idVisiteur == "null" && $idEtatCourant != "null") {
            $lesVisiteurs = $pdo->getTableauVisiteur();
            array_unshift($lesVisiteurs, array(
                "nom" => "Tout",
                "prenom" => "Sélectionner",
                "id" => "null"
            ));
            $lesCles = array_keys($lesVisiteurs);
            $visiteurASelectionner = $lesCles[0];
            $lesEtats = $pdo->getTableauEtat();
            array_unshift($lesEtats, array(
                "libelle" => "Tout Sélectionner",
                "id" => "null"
            ));
            $leEtat = $pdo->getEtatById($idEtatCourant);
            $etatASelectionner = $leEtat;
            include 'vues/vuesComptables/v_filtreFicheFrais.php';
            foreach ($lesVisiteurs as $unVisiteur) {
                $idVisiteur = $unVisiteur['id'];
                $visiteur = $unVisiteur['nom'] . " " . $unVisiteur['prenom'];
                $lesMois = $pdo->getLesMoisDisponibles($idVisiteur);
                foreach ($lesMois as $unMois) {
                    $mois = $unMois['mois'];
                    $lesInfosFicheFraisDuVisiteur = $pdo->getLesInfosFicheFraisParEtat($idVisiteur, $mois, $idEtatCourant);
                    if ($lesInfosFicheFraisDuVisiteur) {
                        $cpt++;
                        $numAnnee = $unMois['numAnnee'];
                        $numMois = $unMois['numMois'];
                        $libEtat = $lesInfosFicheFraisDuVisiteur['libEtat'];
                        $idEtat = $lesInfosFicheFraisDuVisiteur['idEtat'];
                        $btn = "btn btn-danger";
                        if ($idEtat == "VA") {
                            $changementEtat = "Mettre la fiche de frais en Paiement";
                        } elseif ($idEtat == "MP") {
                            $changementEtat = "Relancer le Paiement";
                        } else {
                            $changementEtat = "Remboursée";
                            $btn = "btn btn-success";
                        }
                        $montantValide = $lesInfosFicheFraisDuVisiteur['montantValide'];
                        $dateModif = dateAnglaisVersFrancais($lesInfosFicheFraisDuVisiteur['dateModif']);
                        include 'vues/vuesComptables/v_etatFraisComptable.php';
                    }
                }
            }
        } elseif ($idEtatCourant == "null" && $idVisiteur != "null") {
            $lesVisiteurs = $pdo->getTableauVisiteur();
            array_unshift($lesVisiteurs, array(
                "nom" => "Tout",
                "prenom" => "Sélectionner",
                "id" => "null"
            ));
            $leVisiteur = $pdo->getVisiteurById($idVisiteur);
            $visiteurASelectionner = $leVisiteur;
            $lesEtats = $pdo->getTableauEtat();
            array_unshift($lesEtats, array(
                "libelle" => "Tout Sélectionner",
                "id" => "null"
            ));
            $lesClesEtat = array_keys($lesEtats);
            $etatASelectionner = $lesClesEtat[0];
            include 'vues/vuesComptables/v_filtreFicheFrais.php';

            $visiteur = $unVisiteur['nom'] . " " . $unVisiteur['prenom'];
            $lesMois = $pdo->getLesMoisDisponibles($idVisiteur);
            foreach ($lesMois as $unMois) {
                $mois = $unMois['mois'];
                $lesInfosFicheFrais = $pdo->getLesInfosFicheFraisPaiement($idVisiteur, $mois);
                if ($lesInfosFicheFrais) {
                    $cpt++;
                    $numAnnee = $unMois['numAnnee'];
                    $numMois = $unMois['numMois'];
                    $libEtat = $lesInfosFicheFrais['libEtat'];
                    $idEtat = $lesInfosFicheFrais['idEtat'];
                    $btn = "btn btn-danger";
                    if ($idEtat == "VA") {
                        $changementEtat = "Mettre la fiche de frais en Paiement";
                    } elseif ($idEtat == "MP") {
                        $changementEtat = "Relancer le Paiement";
                    } else {
                        $changementEtat = "Remboursée";
                        $btn = "btn btn-success";
                    }
                    $montantValide = $lesInfosFicheFrais['montantValide'];
                    $dateModif = dateAnglaisVersFrancais($lesInfosFicheFrais['dateModif']);
                    include 'vues/vuesComptables/v_etatFraisComptable.php';
                }
            }
        } elseif ($idVisiteur == "null" && $idEtatCourant == "null") {
            $lesVisiteurs = $pdo->getTableauVisiteur();
            array_unshift($lesVisiteurs, array(
                "nom" => "Tout",
                "prenom" => "Sélectionner",
                "id" => "null"
            ));
            $lesCles = array_keys($lesVisiteurs);
            $visiteurASelectionner = $lesCles[0];
            $lesEtats = $pdo->getTableauEtat();
            array_unshift($lesEtats, array(
                "libelle" => "Tout Sélectionner",
                "id" => "null"
            ));
            $lesClesEtat = array_keys($lesEtats);
            $etatASelectionner = $lesClesEtat[0];
            include 'vues/vuesComptables/v_filtreFicheFrais.php';
            foreach ($lesVisiteurs as $unVisiteur) {
                $idVisiteur = $unVisiteur['id'];
                $visiteur = $unVisiteur['nom'] . " " . $unVisiteur['prenom'];
                $lesMois = $pdo->getLesMoisDisponibles($idVisiteur);
                foreach ($lesMois as $unMois) {
                    $cpt++;
                    $mois = $unMois['mois'];
                    $lesInfosFicheFrais = $pdo->getLesInfosFicheFraisPaiement($idVisiteur, $mois);
                    if ($lesInfosFicheFrais) {
                        $numAnnee = $unMois['numAnnee'];
                        $numMois = $unMois['numMois'];
                        $libEtat = $lesInfosFicheFrais['libEtat'];
                        $idEtat = $lesInfosFicheFrais['idEtat'];
                        $btn = "btn btn-danger";
                        if ($idEtat == "VA") {
                            $changementEtat = "Mettre la fiche de frais en Paiement";
                        } elseif ($idEtat == "MP") {
                            $changementEtat = "Relancer le Paiement";
                        } else {
                            $changementEtat = "Remboursée";
                            $btn = "btn btn-success";
                        }
                        $montantValide = $lesInfosFicheFrais['montantValide'];
                        $dateModif = dateAnglaisVersFrancais($lesInfosFicheFrais['dateModif']);
                        include 'vues/vuesComptables/v_etatFraisComptable.php';
                    }
                }
            }
        } else {
            $lesVisiteurs = $pdo->getTableauVisiteur();
            array_unshift($lesVisiteurs, array(
                "nom" => "Tout",
                "prenom" => "Sélectionner",
                "id" => "null"
            ));
            $leVisiteur = $pdo->getVisiteurById($idVisiteur);
            $visiteurASelectionner = $leVisiteur;
            $lesEtats = $pdo->getTableauEtat();
            array_unshift($lesEtats, array(
                "libelle" => "Tout Sélectionner",
                "id" => "null"
            ));
            $leEtat = $pdo->getEtatById($idEtatCourant);
            $etatASelectionner = $leEtat;
            include 'vues/vuesComptables/v_filtreFicheFrais.php';
            $visiteur = $leVisiteur['nom'] . " " . $leVisiteur['prenom'];
            $lesMoisDuVisiteur = $pdo->getLesMoisDisponibles($idVisiteur);
            foreach ($lesMoisDuVisiteur as $unMois) {
                $mois = $unMois['mois'];
                $lesInfosFicheFraisDuVisiteur = $pdo->getLesInfosFicheFraisParEtat($idVisiteur, $mois, $idEtatCourant);
                if ($lesInfosFicheFraisDuVisiteur) {
                    $cpt++;
                    $numAnnee = $unMois['numAnnee'];
                    $numMois = $unMois['numMois'];
                    $libEtat = $lesInfosFicheFraisDuVisiteur['libEtat'];
                    $idEtat = $lesInfosFicheFraisDuVisiteur['idEtat'];
                    $btn = "btn btn-danger";
                    if ($idEtat == "VA") {
                        $changementEtat = "Mettre la fiche de frais en Paiement";
                    } elseif ($idEtat == "MP") {
                        $changementEtat = "Relancer le Paiement";
                    } else {
                        $changementEtat = "Remboursée";
                        $btn = "btn btn-success";
                    }
                    $montantValide = $lesInfosFicheFraisDuVisiteur['montantValide'];
                    $dateModif = dateAnglaisVersFrancais($lesInfosFicheFraisDuVisiteur['dateModif']);
                    include 'vues/vuesComptables/v_etatFraisComptable.php';
                }
            }
        }
        if ($cpt == 0) {
            ajouterErreur('Aucune fiche de frais à afficher');
            include 'vues/v_erreurs.php';
        }

        break;
    case'filtreParEtatUniquement' :
        echo "Bonjour zef";
        break;
    case 'changerEtat':
        $idVisiteur = filter_input(INPUT_GET, 'id', FILTER_SANITIZE_STRING);
        $mois = filter_input(INPUT_GET, 'mois', FILTER_SANITIZE_STRING);
        $idEtat = filter_input(INPUT_GET, 'etat', FILTER_SANITIZE_STRING);
        $lesVisiteurs = $pdo->getTableauVisiteur();
        array_unshift($lesVisiteurs, array(
            "nom" => "Tout",
            "prenom" => "Sélectionner",
            "id" => "null"
        ));
        $leVisiteur = $pdo->getVisiteurById($idVisiteur);
        $visiteurASelectionner = $leVisiteur;
        $lesEtats = $pdo->getTableauEtat();
        array_unshift($lesEtats, array(
            "libelle" => "Tout Sélectionner",
            "id" => "null"
        ));
        $leEtat = $pdo->getEtatById($idEtat);
        $etatASelectionner = $leEtat;
        $success = false;
        if ($idEtat == "VA") {
            $idEtat = "MP";
            $pdo->majEtatFicheFrais($idVisiteur, $mois, $idEtat);
            $success = true;
        } elseif ($idEtat == "MP") {
            $idEtat = "RB";
            $pdo->majEtatFicheFrais($idVisiteur, $mois, $idEtat);
            $success = true;
        } else {
            $succes = false;
            if ($idEtat == "RB") {
                ajouterErreur('Fiche de frais déjà Remboursée, plus de traitement possible');
            } else {
                ajouterErreur('Traitement impossible, etat non conforme');
            }
            include 'vues/vuesComptables/v_filtreFicheFrais.php';
            include 'vues/v_erreurs.php';
        }

        if ($success) {
            ajouterSucces("Changement efectué !");
            include 'vues/vuesComptables/v_filtreFicheFrais.php';
            include 'vues/v_succes.php';
        }
        break;
    case "":
        break;
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";